//
// Copyright 2017 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

@import "@material/density/functions";
@import "@material/floating-label/mixins";
@import "@material/line-ripple/mixins";
@import "@material/notched-outline/mixins";
@import "@material/notched-outline/variables";
@import "@material/theme/mixins";
@import "@material/rtl/mixins";
@import "@material/shape/mixins";
@import "@material/shape/functions";
@import "@material/typography/mixins";
@import "@material/typography/variables";
@import "helper-text/mixins";
@import "character-counter/mixins";
@import "icon/mixins";
@import "icon/variables";
@import "./variables";
@import "./functions";

///
/// Sets density scale for default text field variant.
///
/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,
///     `-3`, `-2`, `-1`, `0`. Default is `0`.
///
@mixin mdc-text-field-density($density-scale) {
  $height: mdc-density-prop-value(
    $density-config: $mdc-text-field-density-config,
    $density-scale: $density-scale,
    $property-name: height,
  );

  @include mdc-text-field-height($height);
  @include mdc-text-field-input-dense-position_($height);
}

///
/// Sets density scale for outlined text field (Excluding outlined text field with leading icon).
///
/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,
///     `-3`, `-2`, `-1`, `0`. Default is `0`.
///
@mixin mdc-text-field-outlined-density($density-scale) {
  $height: mdc-density-prop-value(
    $density-config: $mdc-text-field-density-config,
    $density-scale: $density-scale,
    $property-name: height,
  );

  @include mdc-text-field-outlined-height($height);
}

///
/// Sets density scale for outlined text field with leading icon.
///
/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,
///     `-3`, `-2`, `-1`, `0`. Default is `0`.
///
@mixin mdc-text-field-outlined-with-leading-icon-density($density-scale) {
  $height: mdc-density-prop-value(
    $density-config: $mdc-text-field-density-config,
    $density-scale: $density-scale,
    $property-name: height,
  );

  @include mdc-text-field-outlined-with-leading-icon-height($height);
}

///
/// Sets height of default text field variant.
///
/// @param {Number} $height
/// @access public
///
@mixin mdc-text-field-height($height) {
  height: $height;

  // Target only dense text field.
  @if $height <= 40px {
    // Target only IE 11.
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
      .mdc-text-field__input {
        // Set line-height to the height of input element excluding padding.
        line-height: $height - $mdc-text-field-input-padding-top;
      }
    }
  }
}

///
/// Sets height of outlined text field variant (Excluding outlined text field with leading icon).
///
/// @param {Number} $height
/// @access public
///
@mixin mdc-text-field-outlined-height($height) {
  $keyframe-suffix: text-field-outlined-#{$height};
  $positionY: mdc-text-field-get-outlined-label-position-y($height);

  @include mdc-notched-outline-floating-label-float-position-absolute($positionY);

  @at-root {
    @include mdc-floating-label-shake-keyframes($keyframe-suffix, $positionY);
  }

  @include mdc-floating-label-shake-animation($keyframe-suffix);
  @include mdc-text-field-height($height);
}

///
/// Sets height of outlined text field with leading icon variant.
///
/// @param {Number} $height
/// @access public
///
@mixin mdc-text-field-outlined-with-leading-icon-height($height) {
  $keyframe-suffix: text-field-outlined-with-leading-icon-#{$height};
  $positionY: mdc-text-field-get-outlined-label-position-y($height);

  // For specificity
  &.mdc-text-field--outlined {
    @include mdc-notched-outline-floating-label-float-position-absolute($positionY, 32px);
  }

  @at-root {
    @include mdc-floating-label-shake-keyframes(
      $keyframe-suffix,
      $positionY,
      $mdc-text-field-outlined-with-leading-icon-label-position-x
    );
  }

  @include mdc-floating-label-shake-animation($keyframe-suffix);

  $keyframe-suffix-rtl: #{$keyframe-suffix}-rtl;

  @at-root {
    @include mdc-floating-label-shake-keyframes(
      $keyframe-suffix-rtl,
      $positionY,
      -$mdc-text-field-outlined-with-leading-icon-label-position-x
    );
  }

  @include mdc-rtl {
    @include mdc-floating-label-shake-animation($keyframe-suffix);
  }

  @include mdc-text-field-height($height);
}

///
/// Sets shape radius of default text field variant.
///
/// @param {Number} $radius Shape radius value in `px` or in percentage.
/// @param {Number} $text-field-height Height of default text field variant. Required only when `$radius` is in
///     percentage unit and if text field has custom height. Defaults to `$mdc-text-field-height`.
/// @param {Boolean} $rtl-reflexive Set to true to flip shape radius in RTL context. Defaults to `false`.
///
@mixin mdc-text-field-shape-radius($radius, $density-scale: $mdc-text-field-density-scale, $rtl-reflexive: false) {
  @if length($radius) > 2 {
    @error "Invalid radius: '#{$radius}' component doesn't allow customizing all corners";
  }

  $height: mdc-density-prop-value(
    $density-config: $mdc-text-field-density-config,
    $density-scale: $density-scale,
    $property-name: height,
  );

  $masked-radius: mdc-shape-mask-radius($radius, 1 1 0 0);

  @include mdc-shape-radius(
    mdc-shape-resolve-percentage-radius($height, $masked-radius),
    $rtl-reflexive
  );
}

@mixin mdc-text-field-textarea-shape-radius($radius, $rtl-reflexive: false) {
  @include mdc-notched-outline-shape-radius($radius, $rtl-reflexive);
}

///
/// Customizes the color of the text entered into an enabled text field.
/// @param {Color} $color - The desired input text color.
///
@mixin mdc-text-field-ink-color($color) {
  @include mdc-text-field-if-enabled_ {
    @include mdc-text-field-ink-color_($color);
  }
}

///
/// Customizes the color of the entered text in a disabled text field.
/// @param {Color} $color - The desired input text color.
///
@mixin mdc-text-field-disabled-ink-color($color) {
  @include mdc-text-field-if-disabled_ {
    @include mdc-text-field-ink-color_($color);
  }
}

///
/// Customizes the color of the prefix text for an enabled text field.
/// @param {Color} $color - The desired input text color.
///
@mixin mdc-text-field-prefix-color($color) {
  @include mdc-text-field-if-enabled_ {
    @include mdc-text-field-prefix-color_($color);
  }
}

///
/// Customizes the color of the prefix text for a disabled text field.
/// @param {Color} $color - The desired input text color.
///
@mixin mdc-text-field-disabled-prefix-color($color) {
  @include mdc-text-field-if-disabled_ {
    @include mdc-text-field-prefix-color_($color);
  }
}

///
/// Customizes the color of the suffix text for an enabled text field.
/// @param {Color} $color - The desired input text color.
///
@mixin mdc-text-field-suffix-color($color) {
  @include mdc-text-field-if-enabled_ {
    @include mdc-text-field-suffix-color_($color);
  }
}

///
/// Customizes the color of the suffix text for a disabled text field.
/// @param {Color} $color - The desired input text color.
///
@mixin mdc-text-field-disabled-suffix-color($color) {
  @include mdc-text-field-if-disabled_ {
    @include mdc-text-field-suffix-color_($color);
  }
}

///
/// Customizes the background color of the text field or textarea when enabled.
/// @param {Color} $color - The desired background color.
///
@mixin mdc-text-field-fill-color($color) {
  @include mdc-text-field-if-enabled_ {
    @include mdc-text-field-fill-color_($color);
  }
}

///
/// Customizes the background color of the text field or textarea when disabled.
/// @param {Color} $color - The desired label text color.
///
@mixin mdc-text-field-disabled-fill-color($color) {
  @include mdc-text-field-if-disabled_ {
    @include mdc-text-field-fill-color_($color);
  }
}

///
/// Customizes the text field bottom line color for the filled variant.
/// @param {Color} $color - The desired bottom line color.
///
@mixin mdc-text-field-bottom-line-color($color) {
  @include mdc-text-field-if-enabled_ {
    @include mdc-text-field-bottom-line-color_($color);
  }
}

///
/// Customizes the disabled text field bottom line color for the filled variant.
/// @param {Color} $color - The desired bottom line color.
///
@mixin mdc-text-field-disabled-bottom-line-color($color) {
  @include mdc-text-field-if-disabled_ {
    @include mdc-text-field-bottom-line-color_($color);
  }
}

///
/// Customizes the hover text field bottom line color for the filled variant.
/// @param {Color} $color - The desired bottom line color.
///
@mixin mdc-text-field-hover-bottom-line-color($color) {
  @include mdc-text-field-if-enabled_ {
    @include mdc-text-field-hover-bottom-line-color_($color);
  }
}

///
/// Customizes the color of the default line ripple of the text field.
/// @param {Color} $color - The desired line ripple color.
///
@mixin mdc-text-field-line-ripple-color($color) {
  @include mdc-text-field-if-enabled_ {
    @include mdc-text-field-line-ripple-color_($color);
  }
}

///
/// Customizes the text color of the label in an enabled text field.
/// @param {Color} $color - The desired label text color.
///
@mixin mdc-text-field-label-color($color) {
  @include mdc-text-field-if-enabled_ {
    @include mdc-text-field-label-ink-color_($color);
  }
}

///
/// Customizes the text color of the label in a disabled text field.
/// @param {Color} $color - The desired label text color.
///
@mixin mdc-text-field-disabled-label-color($color) {
  @include mdc-text-field-if-disabled_ {
    @include mdc-text-field-label-ink-color_($color);
  }
}

///
/// Customizes the border color of the outlined text field or textarea.
/// @param {Color} $color - The desired outline border color.
///
@mixin mdc-text-field-outline-color($color) {
  @include mdc-text-field-if-enabled_ {
    @include mdc-notched-outline-color($color);
  }
}

///
/// Customizes the outline border color when the text field or textarea is hovered.
/// @param {Color} $color - The desired outline border color.
///
@mixin mdc-text-field-hover-outline-color($color) {
  @include mdc-text-field-if-enabled_ {
    @include mdc-text-field-hover-outline-color_($color);
  }
}

///
/// Customizes the outline border color when the text field or textarea is focused.
/// @param {Color} $color - The desired outline border color.
///
@mixin mdc-text-field-focused-outline-color($color) {
  @include mdc-text-field-if-enabled_ {
    @include mdc-text-field-focused-outline-color_($color);
  }
}

///
/// Customizes the outline border color when the text field or textarea is disabled.
/// @param {Color} $color - The desired outline border color.
///
@mixin mdc-text-field-disabled-outline-color($color) {
  @include mdc-text-field-if-disabled_ {
    @include mdc-notched-outline-color($color);
  }
}

///
/// Customizes the caret color of the text field or textarea.
/// @param {Color} $color - The desired caret color.
///
@mixin mdc-text-field-caret-color($color) {
  .mdc-text-field__input {
    @include mdc-theme-prop(caret-color, $color);
  }
}

// Private mixins

// Baseline

@mixin mdc-text-field-disabled_ {
  @include mdc-text-field-bottom-line-color_($mdc-text-field-disabled-border);
  @include mdc-text-field-ink-color_($mdc-text-field-disabled-ink-color);
  @include mdc-text-field-prefix-color_($mdc-text-field-disabled-helper-text-color);
  @include mdc-text-field-suffix-color_($mdc-text-field-disabled-helper-text-color);
  @include mdc-text-field-label-ink-color_($mdc-text-field-disabled-label-color);
  @include mdc-text-field-helper-text-color_($mdc-text-field-disabled-helper-text-color);
  @include mdc-text-field-character-counter-color_($mdc-text-field-disabled-helper-text-color);
  @include mdc-text-field-leading-icon-color_($mdc-text-field-disabled-icon);
  @include mdc-text-field-trailing-icon-color_($mdc-text-field-disabled-icon);
  @include mdc-text-field-fill-color_($mdc-text-field-disabled-background);

  pointer-events: none;

  .mdc-floating-label {
    cursor: default;
  }
}

@mixin mdc-text-field-invalid_ {
  @include mdc-text-field-bottom-line-color($mdc-text-field-error);
  @include mdc-text-field-hover-bottom-line-color($mdc-text-field-error);
  @include mdc-text-field-line-ripple-color($mdc-text-field-error);
  @include mdc-text-field-label-color($mdc-text-field-error);
  @include mdc-text-field-helper-text-validation-color($mdc-text-field-error);
  @include mdc-text-field-caret-color($mdc-text-field-error);
  @include mdc-text-field-trailing-icon-color($mdc-text-field-error);

  + .mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg {
    opacity: 1;
  }
}

@mixin mdc-text-field-focused_ {
  @include mdc-text-field-label-color($mdc-text-field-focused-label-color);

  + .mdc-text-field-helper-line .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg) {
    opacity: 1;
  }
}

@mixin mdc-text-field-end-aligned_ {
  .mdc-text-field__input {
    text-align: end;
  }

  .mdc-text-field__prefix {
    @include mdc-rtl-reflexive-box(
      padding,
      right,
      $mdc-text-field-affix-padding,
      $mdc-text-field-input-rtl-root-selector
    );
  }

  .mdc-text-field__suffix {
    @include mdc-rtl-reflexive-box(
      padding,
      left,
      $mdc-text-field-affix-aligned-padding,
      $mdc-text-field-input-rtl-root-selector
    );
  }
}

@mixin mdc-text-field-ltr-input_ {
  @include mdc-rtl {
    .mdc-text-field__input,
    .mdc-text-field__prefix,
    .mdc-text-field__suffix {
      direction: ltr;
    }

    // Need to specify an order since leading/trailing icons stay in their original positions. We can't just reverse
    // the container unless it only contained prefix/suffix/input.
    .mdc-text-field__leading-icon {
      order: 1;
    }

    .mdc-text-field__suffix {
      order: 2;
    }

    .mdc-text-field__input {
      order: 3;
    }

    .mdc-text-field__prefix {
      order: 4;
    }

    .mdc-text-field__trailing-icon {
      order: 5;
    }
  }
}

@mixin mdc-text-field-dense_ {
  @include mdc-floating-label-float-position(
    $mdc-text-field-dense-label-position-y,
    0%,
    $mdc-text-field-dense-label-scale
  );
  @include mdc-floating-label-shake-animation(text-field-dense);
  @include mdc-text-field-input-dense-position_($mdc-text-field-minimum-height);

  padding: 0 $mdc-text-field-dense-padding;

  .mdc-floating-label {
    font-size: .813rem;

    &--float-above {
      font-size: .813rem;
    }
  }
}

@mixin mdc-required-text-field-label-asterisk_() {
  .mdc-text-field__input:required ~ {
    .mdc-floating-label::after,
    .mdc-notched-outline .mdc-floating-label::after {
      @content;
    }
  }
}

///
/// Sets shape radius of outlined text field variant.
///
/// @param {Number} $radius Shape radius value in `px` or in percentage.
/// @param {Number} $text-field-height Height of outlined text field variant. Required only when `$radius` is in
///     percentage unit and if text field has custom height. Defaults to `$mdc-text-field-height`.
/// @param {Boolean} $rtl-reflexive Set to true to flip shape radius in RTL context. Defaults to `false`.
///
@mixin mdc-text-field-outline-shape-radius(
  $radius,
  $density-scale: $mdc-text-field-density-scale,
  $rtl-reflexive: false) {
  $height: mdc-density-prop-value(
    $density-config: $mdc-text-field-density-config,
    $density-scale: $density-scale,
    $property-name: height,
  );

  $resolved-radius: nth(mdc-shape-resolve-percentage-radius($height, mdc-shape-prop-value($radius)), 1);

  @if (length(mdc-shape-prop-value($radius)) > 1) {
    // stylelint-disable max-line-length
    @warn "mdc-text-field-outline-shape-radius only supports a single radius; see https://github.com/material-components/material-components-web/issues/4140";
    // stylelint-enable
  }

  .mdc-notched-outline {
    @include mdc-notched-outline-shape-radius($resolved-radius, $rtl-reflexive);
  }

  @if ($resolved-radius > $mdc-notched-outline-leading-width) {
    @include mdc-rtl-reflexive-property(padding, $resolved-radius + $mdc-notched-outline-padding, 0);

    + .mdc-text-field-helper-line {
      @include mdc-rtl-reflexive-property(padding, $resolved-radius + $mdc-notched-outline-padding, $resolved-radius);
    }
  }
}

@mixin mdc-text-field-floating-label_ {
  .mdc-floating-label {
    @include mdc-rtl-reflexive-position(left, $mdc-text-field-label-offset);

    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
  }

  // Include these mixins to override above `transform` property.
  //TODO: Remove these from here when floating label is center aligned in all position - this lowers specificity.
  @include mdc-floating-label-float-position($mdc-text-field-label-position-y);

  &--textarea {
    .mdc-floating-label {
      @include mdc-rtl-reflexive-position(left, $mdc-notched-outline-padding);
    }
  }

  &--outlined {
    .mdc-floating-label {
      @include mdc-rtl-reflexive-position(left, $mdc-notched-outline-padding);
    }

    &--with-leading-icon {
      .mdc-floating-label {
        @include mdc-rtl-reflexive-position(
          left,
          ($mdc-text-field-label-offset-with-leading-icon - $mdc-notched-outline-leading-width)
        );

        &--float-above {
          @include mdc-rtl-reflexive-position(
            left,
            (
              $mdc-text-field-label-offset-with-leading-icon -
              $mdc-notched-outline-leading-width +
              $mdc-notched-outline-padding
            )
          );
        }
      }
    }
  }
}

// Outlined

@mixin mdc-text-field-outlined-disabled_ {
  @include mdc-notched-outline-color($mdc-text-field-outlined-disabled-border);
  @include mdc-text-field-fill-color_(transparent);
}

@mixin mdc-text-field-outlined-invalid_ {
  @include mdc-text-field-outline-color($mdc-text-field-error);
  @include mdc-text-field-hover-outline-color($mdc-text-field-error);
  @include mdc-text-field-focused-outline-color($mdc-text-field-error);
}

@mixin mdc-text-field-outlined-focused_ {
  @include mdc-notched-outline-stroke-width($mdc-text-field-outlined-stroke-width);
}

@mixin mdc-text-field-outlined-dense_ {
  @include mdc-notched-outline-floating-label-float-position(
    $mdc-text-field-outlined-dense-label-position-y,
    0%,
    $mdc-text-field-dense-label-scale
  );
  @include mdc-floating-label-shake-animation(text-field-outlined-dense);

  height: $mdc-text-field-dense-height;
  padding: 0 $mdc-text-field-dense-padding;

  .mdc-floating-label {
    top: 14px;
  }
}

@mixin mdc-text-field-outlined_ {
  @include mdc-text-field-outline-color($mdc-text-field-outlined-idle-border);
  @include mdc-text-field-hover-outline-color($mdc-text-field-outlined-hover-border);
  @include mdc-text-field-focused-outline-color(primary);
  @include mdc-floating-label-shake-animation(text-field-outlined);
  @include mdc-text-field-outline-shape-radius(small);
  @include mdc-notched-outline-floating-label-float-position-absolute($mdc-text-field-outlined-label-position-y);
  @include mdc-notched-outline-notch-offset($mdc-notched-outline-border-width);
  @include mdc-states-base-color(transparent);
  @include mdc-text-field-fill-color(transparent);

  overflow: visible; // TODO(lizmitchell): maybe overflow: visible all with ripple move

  .mdc-text-field__input {
    background-color: transparent;
  }

  &.mdc-text-field--focused {
    @include mdc-notched-outline-notch-offset($mdc-text-field-outlined-stroke-width);
  }
}

@mixin mdc-text-field-hover-outline-color_($color) {
  &:not(.mdc-text-field--focused):hover {
    .mdc-notched-outline {
      @include mdc-notched-outline-color($color);
    }
  }
}

@mixin mdc-text-field-focused-outline-color_($color) {
  &.mdc-text-field--focused {
    @include mdc-notched-outline-color($color);
  }
}

// Icons

@mixin mdc-text-field-with-leading-icon_ {
  .mdc-floating-label {
    @include mdc-rtl-reflexive-position(left, $mdc-text-field-label-offset-with-leading-icon);
  }
}

@mixin mdc-text-field-dense-with-leading-icon_ {
  .mdc-floating-label {
    @include mdc-rtl-reflexive-position(left, $mdc-text-field-dense-label-offset-with-leading-icon);
  }
}

@mixin mdc-text-field-outlined-with-leading-icon_ {
  @include mdc-notched-outline-floating-label-float-position-absolute($mdc-text-field-outlined-label-position-y, 32px);
  @include mdc-floating-label-shake-animation(text-field-outlined-leading-icon);

  @include mdc-rtl {
    @include mdc-floating-label-shake-animation(text-field-outlined-leading-icon-rtl);
  }

  .mdc-floating-label {
    @include mdc-rtl-reflexive-position(
      left,
      $mdc-text-field-label-offset-with-leading-icon - $mdc-notched-outline-leading-width
    );
  }
}

@mixin mdc-text-field-outlined-dense-with-leading-icon_ {
  @include mdc-notched-outline-floating-label-float-position(
    $mdc-text-field-outlined-dense-label-position-y,
    $mdc-text-field-outlined-dense-with-leading-icon-label-position-x,
    $mdc-text-field-dense-label-scale
  );
  @include mdc-floating-label-shake-animation(text-field-outlined-leading-icon-dense);

  @include mdc-rtl {
    @include mdc-floating-label-shake-animation(text-field-outlined-leading-icon-dense-rtl);
  }

  .mdc-floating-label {
    @include mdc-rtl-reflexive-position(
      left,
      $mdc-text-field-dense-label-offset-with-leading-icon - $mdc-notched-outline-leading-width
    );
  }
}

@mixin mdc-text-field-with-trailing-icon_ {
  @include mdc-rtl-reflexive-property(padding, $mdc-text-field-padding, $mdc-text-field-with-trailing-icon-padding);
}

// Full Width
@mixin mdc-text-field-fullwidth_ {
  @include mdc-text-field-bottom-line-color($mdc-text-field-bottom-line-idle);
  @include mdc-text-field-disabled-bottom-line-color($mdc-text-field-bottom-line-idle);

  width: 100%;
  padding: 0;

  &:not(.mdc-text-field--textarea) {
    @include mdc-states-base-color(transparent);
    @include mdc-text-field-fill-color(transparent);

    display: flex;
  }

  &.mdc-text-field--textarea .mdc-text-field__input {
    resize: vertical;
  }
}

@mixin mdc-text-field-fullwidth-invalid_ {
  @include mdc-text-field-bottom-line-color($mdc-text-field-error);
}

// Textarea
@mixin mdc-text-field-textarea-disabled_ {
  @include mdc-text-field-outlined-disabled_;
  /* @alternate */
  @include mdc-text-field-fill-color_($mdc-textarea-disabled-background);
}

@mixin mdc-text-field-textarea-invalid_ {
  @include mdc-text-field-outline-color($mdc-text-field-error);
  @include mdc-text-field-hover-outline-color($mdc-text-field-error);
  @include mdc-text-field-focused-outline-color($mdc-text-field-error);
}

@mixin mdc-text-field-textarea_ {
  // Note: The refactor to add the filled textarea style will result in a lot of the specificity issues that the
  // textarea has being resolved by using the same --outlined variant class as the text field.
  @include mdc-text-field-outline-color($mdc-text-field-outlined-idle-border);
  @include mdc-text-field-hover-outline-color($mdc-text-field-outlined-hover-border);
  @include mdc-text-field-focused-outline-color(primary);
  @include mdc-floating-label-shake-animation(textarea);
  @include mdc-text-field-outline-shape-radius(small);
  @include mdc-states-base-color(transparent);
  @include mdc-text-field-fill-color(transparent);
  @include mdc-notched-outline-floating-label-float-position($mdc-text-field-textarea-label-position-y);
  @include mdc-text-field-character-counter-position(16px, 13px);

  $padding-inset: 16px;

  display: inline-flex;
  width: auto;
  height: auto;
  padding: 0;
  transition: none;
  overflow: visible;

  .mdc-text-field__input {
    align-self: auto;
    box-sizing: border-box;
    height: auto;
    margin: $padding-inset/2 1px 1px 0;
    padding: 0 $padding-inset $padding-inset;
    border: none;
    line-height: 1.75rem; // 28sp
  }

  .mdc-text-field-character-counter + .mdc-text-field__input {
    margin-bottom: 28px; // Leaves space for character counter if it exists.
    padding-bottom: 0;
  }

  .mdc-floating-label {
    top: 17px;
    width: auto;
    pointer-events: none;

    // Resets center aligning the floating label.
    &:not(.mdc-floating-label--float-above) {
      transform: none;
    }
  }

  &.mdc-text-field--focused {
    @include mdc-text-field-outlined-focused_;
  }
}

// Components

@mixin mdc-text-field-input-position_ {
  @include mdc-text-field-filled-only_ {
    .mdc-text-field__input,
    .mdc-text-field__prefix,
    .mdc-text-field__suffix {
      align-self: flex-start;
      padding-top: $mdc-text-field-input-padding-top;
    }
  }
}

@mixin mdc-text-field-input-dense-position_($height) {
  @include mdc-text-field-filled-only_ {
    .mdc-text-field__input,
    .mdc-text-field__prefix,
    .mdc-text-field__suffix {
      $dense-padding: $height - $mdc-text-field-input-height;

      padding-top: min($mdc-text-field-input-padding-top, $dense-padding);
    }
  }
}

@mixin mdc-text-field-filled-only_() {
  &:not(.mdc-text-field--no-label) {
    &:not(.mdc-text-field--outlined) {
      &:not(.mdc-text-field--fullwidth) {
        &:not(.mdc-text-field--textarea) {
          @content;
        }
      }
    }
  }
}

@mixin mdc-text-field-input-placeholder_ {
  &::placeholder {
    transition: mdc-text-field-transition(opacity, $duration: 67ms);
    opacity: 0;
    color: $mdc-text-field-placeholder-ink-color;
  }

  .mdc-text-field--disabled &::placeholder {
    color: $mdc-text-field-disabled-placeholder-ink-color;
  }

  // Override the placeholder styles in IE with important rule to improve specificity.
  // stylelint-disable-next-line selector-no-vendor-prefix
  &:-ms-input-placeholder {
    color: $mdc-text-field-placeholder-ink-color !important;
  }

  // stylelint-disable-next-line selector-no-vendor-prefix
  .mdc-text-field--disabled &::-ms-input-placeholder {
    color: $mdc-text-field-disabled-placeholder-ink-color !important;
  }

  // Always show placeholder for text fields that has no label and show only on focused state when label is present.
  .mdc-text-field--fullwidth &::placeholder,
  .mdc-text-field--no-label &::placeholder,
  .mdc-text-field--focused &::placeholder {
    transition-delay: 40ms;
    transition-duration: 110ms;
    opacity: 1;
  }
}

@mixin mdc-text-field-prefix_ {
  @include mdc-text-field-affix_;
  @include mdc-rtl-reflexive-box(
    padding,
    right,
    $mdc-text-field-affix-aligned-padding,
    $mdc-text-field-input-rtl-root-selector
  );
}

@mixin mdc-text-field-suffix_ {
  @include mdc-text-field-affix_;
  @include mdc-rtl-reflexive-box(padding, left, $mdc-text-field-affix-padding, $mdc-text-field-input-rtl-root-selector);
}

@mixin mdc-text-field-affix_ {
  @include mdc-typography(subtitle1);

  transition: mdc-text-field-transition(opacity);
  opacity: 0;

  .mdc-text-field--label-floating &,
  .mdc-text-field--no-label & {
    opacity: 1;
  }
}

// Customization

@mixin mdc-text-field-ink-color_($color) {
  .mdc-text-field__input {
    @include mdc-theme-prop(color, $color);
  }
}

@mixin mdc-text-field-prefix-color_($color) {
  .mdc-text-field__prefix {
    @include mdc-theme-prop(color, $color);
  }
}

@mixin mdc-text-field-suffix-color_($color) {
  .mdc-text-field__suffix {
    @include mdc-theme-prop(color, $color);
  }
}

@mixin mdc-text-field-fill-color_($color) {
  @include mdc-theme-prop(background-color, $color);
}

@mixin mdc-text-field-bottom-line-color_($color) {
  .mdc-line-ripple {
    @include mdc-line-ripple-inactive-color($color);
  }
}

@mixin mdc-text-field-hover-bottom-line-color_($color) {
  &:hover .mdc-line-ripple {
    @include mdc-line-ripple-inactive-color($color);
  }
}

@mixin mdc-text-field-line-ripple-color_($color) {
  .mdc-line-ripple {
    @include mdc-line-ripple-color($color);
  }
}

@mixin mdc-text-field-label-ink-color_($color) {
  .mdc-floating-label {
    @include mdc-floating-label-ink-color($color);
  }
}

// State qualifiers

///
/// Helps style the text-field only when it's enabled.
/// @access private
///
@mixin mdc-text-field-if-enabled_ {
  &:not(.mdc-text-field--disabled) {
    @content;
  }
}

///
/// Helps style the text-field only when it's disabled.
/// @access private
///
@mixin mdc-text-field-if-disabled_ {
  &.mdc-text-field--disabled {
    @content;
  }
}
