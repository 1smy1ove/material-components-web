//
// Copyright 2018 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

@use "sass:list";
@use "sass:map";
@use "sass:string";

/// Retrieves typography-related properties from the provided Map.
///
/// @param {Map} $style-props - a Map of style properties to filter.
/// @return {Map} a Map of filtered typography-only styles.
@function get-typography-properties_($style-props) {
  $typography-props: ();
  $text-properties: hypens, letter-spacing, line-break, overflow-wrap, white-space, word-break, word-spacing;

  @each $key, $value in $style-props {
    @if (
      string.index($key, "font") == 1 or
      string.index($key, "text") == 1 or
      string.index($key, "line-height") == 1 or
      list.index($text-properties, $key) != null
    ) {
      $typography-props: map.merge($typography-props, (#{$key}: $value));
    }
  }

  @return $typography-props;
}

@function set-styles_($base-styles, $scale-styles, $override-styles) {
  @each $style, $style-props in $scale-styles {

    // Merge base properties for all styles.
    $style-props: map.merge($base-styles, $style-props);

    // Merge overrides onto each style.
    $style-props: map.merge($style-props, map.get($override-styles, $style));

    // Override original styles with new styles.
    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));
  }

  @return $scale-styles;
}

@function get-letter-spacing_($tracking, $font-size) {
  @return $tracking / ($font-size * 16) * 1em;
}
